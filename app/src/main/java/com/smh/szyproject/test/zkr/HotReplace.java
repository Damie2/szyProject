package com.smh.szyproject.test.zkr;

/**
 * author : smh
 * date   : 2020/8/19 15:40
 * desc   :热更新机制
 */
class HotReplace {
//    动态加载和热更新
//
//    之前做过一款Accessibility辅助功能模拟APP，其中有数百台手机，每个手机中都有微信，服务端下发任务控制微信做操作
//    但是不可能加一个功能就重新装一次，所以用到了动态加载和热更新
//    动态加载工程主要用到三个module，app、dex和tunnel,tunnel里是个接口
//    用的时候把这个dex放到指定的路径，程序启动后，找这个路径下的dex文件，通过DexClassLoader
//    的load方法拿到它，再通过反射，获取到这个object，这个object其实就是实现了tunnel接口的实现类
//    程序心跳运行时，主程序运行调用tunnel接口里的方法，其实运行实现了方法的那些类，只要方法不变
//    怎么实现的就是业务逻辑了
//    热更新结合上面，开发这边通过dx命令打包后，把dex文件上传到服务器，客户端下载，把文件下载到指定的目录
//    再发个广播，重新load反射，必须要init，就又可以使用了，只不过方法的实现改变了
//
//    如果是现在商业的东西可以用阿里的hotfix，配置完成后， 通过pathcTool把新包和旧包放进去生成补丁文件，上传测试就行了








}
